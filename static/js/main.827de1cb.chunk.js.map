{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","width","frameSize","firstVisibleImage","nextClick","prevClick","animationDuration","infinite","resizing","className","style","height","map","image","i","transform","transition","src","alt","toString","type","cn","onClick","length","App","state","itemWidth","step","handleItemWidthChange","event","setState","target","value","setTimeout","handleFrameSizeChange","handleStepChange","handleAnimationDurationChange","handleInfiniteChange","prevState","handleNextClickChange","lastImages","newFirstVisibleImage","handlePrevClickChange","this","min","max","onChange","checked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yQAmFeA,EAlEmB,SAAC,GAAD,IAE9BC,EAF8B,EAE9BA,OAAQC,EAFsB,EAEtBA,MAAOC,EAFe,EAEfA,UAAWC,EAFI,EAEJA,kBAC1BC,EAH8B,EAG9BA,UAAWC,EAHmB,EAGnBA,UACXC,EAJ8B,EAI9BA,kBAAmBC,EAJW,EAIXA,SAAUC,EAJC,EAIDA,SAJC,OAOhC,sBACEC,UAAU,WACVC,MAAO,CAAET,MAAOA,EAAQC,GAF1B,UAIE,oBACEO,UAAU,iBACVC,MAAO,CACLC,OAAQV,GAHZ,SAMGD,EAAOY,KAAI,SAACC,EAAOC,GAAR,OACV,oBACEJ,MAAO,CACLT,QACAU,OAAQV,EACRc,UAAU,cAAD,OAAgBd,EAAQE,EAAxB,OACTa,WAAYR,EAAW,OAAH,oBAAyBF,EAAoB,IAA7C,WAEtBG,UAAU,iBAPZ,SAUE,qBACEC,MAAO,CAAET,QAAOU,OAAQV,GACxBQ,UAAU,kBACVQ,IAAKJ,EACLK,KAAMJ,EAAI,GAAGK,cANVN,QAYX,sBAAKJ,UAAU,oBAAf,UACE,wBACEW,KAAK,SACLX,UAAWY,IAAG,mBAAoB,CAChC,2BAAkD,IAAtBlB,EAC5B,6BAAoD,IAAtBA,IAA4BI,IAE5De,QAASjB,EANX,oBAUA,wBACEe,KAAK,SACLX,UAAWY,IAAG,mBAAoB,CAChC,2BACElB,IAAsBH,EAAOuB,OAASrB,EACxC,6BACEC,IAAsBH,EAAOuB,OAASrB,IAAcK,IAExD,UAAQ,OACRe,QAASlB,EATX,2BCnDAoB,E,4MACJC,MAAQ,CACNzB,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEF0B,UAAW,IACXxB,UAAW,EACXyB,KAAM,EACNxB,kBAAmB,EACnBG,kBAAmB,IACnBC,UAAU,EACVC,UAAU,G,EAGZoB,sBAAwB,SAACC,GACvB,EAAKC,SAAS,CACZJ,WAAYG,EAAME,OAAOC,MACzBxB,UAAU,IAGZyB,YAAW,WACT,EAAKH,SAAS,CAAEtB,UAAU,MACzB,M,EAGL0B,sBAAwB,SAACL,GACvB,EAAKC,UAAS,iBAAO,CACnB5B,WAAY2B,EAAME,OAAOC,MACzB7B,kBAAmB,O,EAIvBgC,iBAAmB,SAACN,GAClB,EAAKC,SAAS,CAAEH,MAAOE,EAAME,OAAOC,S,EAGtCI,8BACA,SAACP,GACC,EAAKC,SAAS,CAAExB,mBAAoBuB,EAAME,OAAOC,S,EAGnDK,qBAAuB,WACrB,EAAKP,UAAS,SAACQ,GAAD,MAAgB,CAAE/B,UAAW+B,EAAU/B,c,EAGvDgC,sBAAwB,WACtB,EAAKT,UAAS,SAACQ,GACb,IAAME,EAAaF,EAAUtC,OAAOuB,OAASe,EAAUpC,UACjDuC,EAAuBH,EAAUnC,kBAAoBmC,EAAUX,KAErE,OAAIc,EAAuBD,EAClB,CACLrC,kBAAmBsC,GAInBA,EAAuBD,IAAeF,EAAU/B,SAC3C,CACLJ,kBAAmBqC,GAIhB,CACLrC,kBAAmB,O,EAKzBuC,sBAAwB,WACtB,EAAKZ,UAAS,SAACQ,GACb,IAAME,EAAaF,EAAUtC,OAAOuB,OAASe,EAAUpC,UACjDuC,EAAuBH,EAAUnC,kBAAoBmC,EAAUX,KAErE,OAAIc,GAAwB,EACnB,CACLtC,kBAAmBsC,GAInBA,EAAuB,IAAMH,EAAU/B,SAClC,CACLJ,kBAAmB,GAIhB,CACLA,kBAAmBqC,O,4CAKzB,WACE,MAIIG,KAAKlB,MAHPzB,EADF,EACEA,OAAQ0B,EADV,EACUA,UAAWxB,EADrB,EACqBA,UAAWyB,EADhC,EACgCA,KAC9BxB,EAFF,EAEEA,kBAAmBG,EAFrB,EAEqBA,kBACnBC,EAHF,EAGEA,SAAUC,EAHZ,EAGYA,SAGZ,OACE,sBAAKC,UAAU,MAAf,UACE,oBACEA,UAAU,aACV,UAAQ,QAFV,iCAIoBT,EAAOuB,OAJ3B,aAOA,sBAAKd,UAAU,gBAAf,UACE,wBAAOA,UAAU,aAAjB,uBAEE,uBACEA,UAAU,aACVW,KAAK,SACLY,MAAON,EACPkB,IAAI,KACJC,IAAI,MACJlB,KAAK,KACLmB,SAAUH,KAAKf,2BAInB,wBAAOnB,UAAU,aAAjB,uBAEE,uBACEA,UAAU,aACVW,KAAK,SACLY,MAAO9B,EACP0C,IAAI,IACJC,IAAI,KACJC,SAAUH,KAAKT,2BAInB,wBAAOzB,UAAU,aAAjB,iBAEE,uBACEA,UAAU,aACVW,KAAK,SACLwB,IAAI,IACJC,IAAK3C,EACL8B,MAAOL,EACPmB,SAAUH,KAAKR,sBAInB,wBAAO1B,UAAU,aAAjB,+BAEE,uBACEA,UAAU,aACVW,KAAK,SACLY,MAAO1B,EACPsC,IAAI,IACJC,IAAI,OACJlB,KAAK,MACLmB,SAAUH,KAAKP,mCAInB,wBAAO3B,UAAU,aAAjB,qBAEE,uBACEA,UAAU,gBACVW,KAAK,WACLY,MAAM,WACNe,QAASxC,EACTuC,SAAUH,KAAKN,6BAMrB,cAAC,EAAD,CACErC,OAAQA,EACRC,MAAOyB,EACPxB,UAAWA,EACXC,kBAAmBA,EACnBC,UAAWuC,KAAKJ,sBAChBlC,UAAWsC,KAAKD,sBAChBpC,kBAAmBA,EACnBC,SAAUA,EACVC,SAAUA,W,GA7LFwC,IAAMC,WAoMTzB,IChNf0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.827de1cb.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[]\n  width: number\n  frameSize: number\n  firstVisibleImage: number\n  nextClick: () => void\n  prevClick: () => void\n  animationDuration: number\n  infinite: boolean\n  resizing: boolean\n};\n\nconst Carousel: React.FC<Props> = (\n  {\n    images, width, frameSize, firstVisibleImage,\n    nextClick, prevClick,\n    animationDuration, infinite, resizing,\n  },\n) => (\n  <div\n    className=\"Carousel\"\n    style={{ width: width * frameSize }}\n  >\n    <ul\n      className=\"Carousel__list\"\n      style={{\n        height: width,\n      }}\n    >\n      {images.map((image, i) => (\n        <li\n          style={{\n            width,\n            height: width,\n            transform: `translate(-${width * firstVisibleImage}px)`,\n            transition: resizing ? 'none' : `transform ${animationDuration / 1000}s ease`,\n          }}\n          className=\"Carousel__item\"\n          key={image}\n        >\n          <img\n            style={{ width, height: width }}\n            className=\"Carousel__image\"\n            src={image}\n            alt={(i + 1).toString()}\n          />\n        </li>\n      ))}\n    </ul>\n\n    <div className=\"Carousel__buttons\">\n      <button\n        type=\"button\"\n        className={cn('Carousel__button', {\n          'Carousel__button--active': firstVisibleImage !== 0,\n          'Carousel__button--disabled': firstVisibleImage === 0 && !infinite,\n        })}\n        onClick={prevClick}\n      >\n        ←\n      </button>\n      <button\n        type=\"button\"\n        className={cn('Carousel__button', {\n          'Carousel__button--active':\n            firstVisibleImage !== images.length - frameSize,\n          'Carousel__button--disabled':\n            firstVisibleImage === images.length - frameSize && !infinite,\n        })}\n        data-cy=\"next\"\n        onClick={nextClick}\n      >\n        →\n      </button>\n    </div>\n  </div>\n);\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  firstVisibleImage: number;\n  animationDuration: number;\n  infinite: boolean;\n  resizing: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    firstVisibleImage: 0,\n    animationDuration: 1000,\n    infinite: false,\n    resizing: false,\n  };\n\n  handleItemWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      itemWidth: +event.target.value,\n      resizing: true,\n    });\n\n    setTimeout(() => {\n      this.setState({ resizing: false });\n    }, 100);\n  };\n\n  handleFrameSizeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState(() => ({\n      frameSize: +event.target.value,\n      firstVisibleImage: 0,\n    }));\n  };\n\n  handleStepChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  handleAnimationDurationChange =\n  (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  handleInfiniteChange = () => {\n    this.setState((prevState) => ({ infinite: !prevState.infinite }));\n  };\n\n  handleNextClickChange = () => {\n    this.setState((prevState) => {\n      const lastImages = prevState.images.length - prevState.frameSize;\n      const newFirstVisibleImage = prevState.firstVisibleImage + prevState.step;\n\n      if (newFirstVisibleImage < lastImages) {\n        return {\n          firstVisibleImage: newFirstVisibleImage,\n        };\n      }\n\n      if (newFirstVisibleImage > lastImages && !prevState.infinite) {\n        return {\n          firstVisibleImage: lastImages,\n        };\n      }\n\n      return {\n        firstVisibleImage: 0,\n      };\n    });\n  };\n\n  handlePrevClickChange = () => {\n    this.setState((prevState) => {\n      const lastImages = prevState.images.length - prevState.frameSize;\n      const newFirstVisibleImage = prevState.firstVisibleImage - prevState.step;\n\n      if (newFirstVisibleImage >= 0) {\n        return {\n          firstVisibleImage: newFirstVisibleImage,\n        };\n      }\n\n      if (newFirstVisibleImage < 0 && !prevState.infinite) {\n        return {\n          firstVisibleImage: 0,\n        };\n      }\n\n      return {\n        firstVisibleImage: lastImages,\n      };\n    });\n  };\n\n  render() {\n    const {\n      images, itemWidth, frameSize, step,\n      firstVisibleImage, animationDuration,\n      infinite, resizing,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          className=\"App__title\"\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <div className=\"App__settings\">\n          <label className=\"App__label\">\n            Item width\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              value={itemWidth}\n              min=\"50\"\n              max=\"350\"\n              step=\"10\"\n              onChange={this.handleItemWidthChange}\n            />\n          </label>\n\n          <label className=\"App__label\">\n            Frame size\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              value={frameSize}\n              min=\"1\"\n              max=\"10\"\n              onChange={this.handleFrameSizeChange}\n            />\n          </label>\n\n          <label className=\"App__label\">\n            Step\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              min=\"1\"\n              max={frameSize}\n              value={step}\n              onChange={this.handleStepChange}\n            />\n          </label>\n\n          <label className=\"App__label\">\n            Animation duration\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              value={animationDuration}\n              min=\"0\"\n              max=\"5000\"\n              step=\"500\"\n              onChange={this.handleAnimationDurationChange}\n            />\n          </label>\n\n          <label className=\"App__label\">\n            Infinite\n            <input\n              className=\"App__checkbox\"\n              type=\"checkbox\"\n              value=\"Infinite\"\n              checked={infinite}\n              onChange={this.handleInfiniteChange}\n            />\n          </label>\n\n        </div>\n\n        <Carousel\n          images={images}\n          width={itemWidth}\n          frameSize={frameSize}\n          firstVisibleImage={firstVisibleImage}\n          nextClick={this.handleNextClickChange}\n          prevClick={this.handlePrevClickChange}\n          animationDuration={animationDuration}\n          infinite={infinite}\n          resizing={resizing}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}